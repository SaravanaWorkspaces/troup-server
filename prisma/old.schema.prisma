// Troup Model
model Troup {
  id          String       @default(cuid()) @id
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  maxMembers  Int          @default(25)
  profile     TroupProfile @relation("_Troup_Profile", references: [id])
  primaryUser User         @relation("_Troup_User", references: [id])
  users       User[]       @relation("_Troup_Users", references: [id])
}

model TroupProfile {
  id         String   @default(cuid()) @id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String   @unique
  adminEmail String?
  address    String?
  troup      Troup    @relation("_Troup_Profile", fields: [id])
}

// User Models
model User {
  id               String      @default(cuid()) @id
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  email            String      @unique
  password         String
  profile          UserProfile @relation(fields: [id], references: [id])
  roles            Role[]
  troups           Troup[]     @relation("_Troup_Users", references: [id])
  createdTodos     Task[]      @relation("_Todo_Task_Author")
  todos Todo[] @relation("_Todos")
  tasks       Task[]      @relation("_Todo_Task")
  posts     Post[]      @relation("_Posts")
}

model UserProfile {
  id                     String   @default(cuid()) @id
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  firstName              String
  lastName               String
  isSuperAdmin           Boolean  @default(false)
  professionalCompetence String?
  referral               User?
  utm_source             String?
  utm_campaign           String?
  utm_medium             String?
  utm_term               String?
  utm_content            String?
}

// Post Models
model Post {
  id              String            @default(cuid()) @id
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  published       Boolean?          @default(false)
  title           String
  content         String
  label           Label[]
  author          User              @relation("_Post_Author", references: [id])
  contributors    User[]            @relation("_Post_Contributor", references: [id])
  troup           Troup             @relation("_Post_Parent", references: [id])
  revisionHistory RevisionHistory[]
}

model Comment {
  id              String            @default(cuid()) @id
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  content         String            @default("")
  troup           Troup             @relation(fields: [id], references: [id])
  author          User              @relation(fields: [id], references: [id])
  post            Post              @relation("_Comment_Parent", fields: [id], references: [id])
  revisionHistory RevisionHistory[]
}

// Todo Models
model Todo {
  id        String       @default(cuid()) @id
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  members   User[]
  columns   TodoColumn[]
}

model TodoColumn {
  id              String            @default(cuid()) @id
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  name            String
  revisionHistory RevisionHistory[]
  todo Todo @relation(fields: [id])
}

model Task {
  id           String   @default(cuid()) @id
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  author       User     @relation("_Todo_Task_Author", fields: [id], references: [id])
  assignee     User     @relation("_Todo_Task_Owner", fields: [id], references: [id])
  contributors User[]   @relation("_Todo_Task_Contributor", references: [id])
  state        State    @default(ACTIVE)
}

// Supporting models
model Label {
  id        String    @default(cuid()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  color     String
  type      LabelType @default(GLOBAL)
  troup     Troup     @relation(fields: [id], references: [id])
  todo      Todo      @relation(fields: [id], references: [id])
}

model Role {
  id        String    @default(cuid()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  troup     Troup     @relation(fields: [id], references: [id])
  user      User      @relation(fields: [id], references: [id])
  value     RoleValue @default(CONTRIBUTOR)
}

model RevisionHistory {
  id           String   @default(cuid()) @id
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  content      String   @default("")
  updatedBy    User     @relation(fields: [id], references: [id])
  postId       String?
  commentId    String?
  todoColumnId String?
}

model StateHistory {
  id        String   @default(cuid()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  state     State    @default(ACTIVE)
}

// Enums
enum RoleValue {
  SUPER_ADMIN
  ADMIN
  MODERATOR
  CONTRIBUTOR
}

enum State {
  ACTIVE
  INACTIVE
  CHURNING
  ARCHIVED
}

enum LabelType {
  GLOBAL
  SPECIFIC
}
